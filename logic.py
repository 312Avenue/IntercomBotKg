from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.types.input_file import FSInputFile
from aiogram.filters import CommandStart, Command

import keyboards as kb
import commands as cm
import mysql.connector


router = Router()


@router.message(CommandStart())
async def start(message: Message):
    cm.upsert_report('start')
    
    await message.answer('–°–æ–æ–Ω—É–Ω! –¢”©–º”©–Ω–¥”© –º–∞–∑–º—É–Ω—É –±–∞—Ä ‚Äî —Ç–µ–º–∞–Ω—ã —Ç–∞–Ω–¥–∞“£—ã–∑ –∂–∞–Ω–∞ –±–∞—à—Ç–∞–π–ª—ã‚¨áÔ∏è', reply_markup=kb.helper)
    

@router.message(F.text == '–ñ–æ–∫–∫–æ —á—ã–≥–∞—Ä—É—É')
async def cancel_action(message: Message):
    user = message.from_user.id
    cm.reset_state(user)
    await message.answer('–ê—Ä–∞–∫–µ—Ç –∂–æ–∫–∫–æ —á—ã–≥–∞—Ä—ã–ª–¥—ã', reply_markup=kb.helper)


@router.message(Command('help'))
async def reply_help(message: Message):
    await message.answer('–°–∏–∑ –∏—à-–∞—Ä–∞–∫–µ—Ç—Ç–µ—Ä–¥–∏–Ω –±–∏—Ä–∏–Ω —Ç–∞–Ω–¥–∞–π –∞–ª–∞—Å—ã–∑', reply_markup=kb.helper)


@router.message(F.photo)
async def handle_photo(message: Message):
    await message.answer('–ú–µ–Ω —Å“Ø—Ä”©—Ç—Ç”©—Ä–¥“Ø –∫”©—Ä”© –∞–ª–±–∞–π–º...\n–ê—Ä–∞–∫–µ—Ç—Ç–µ—Ä–¥–∏–Ω –±–∏—Ä–∏–Ω —Ç–∞–Ω–¥–∞“£—ã–∑ –∂–∞–∫—à—ã –±–æ–ª–æ—Ç', reply_markup=kb.helper)


### –î–æ–º–æ—Ñ–æ–Ω–¥—É –∫–∞–Ω—Ç–∏–ø —Ç—É—Ç–∞—à—Ç—ã—Ä—Å–∞ –±–æ–ª–æ—Ç?
@router.message(F.text == '–î–æ–º–æ—Ñ–æ–Ω–¥—É –∫–∞–Ω—Ç–∏–ø —Ç—É—Ç–∞—à—Ç—ã—Ä—Å–∞ –±–æ–ª–æ—Ç?')
async def connect_intercom(message: Message):
    cm.upsert_report('how_connect')
    
    await message.answer('–î–æ–º–æ—Ñ–æ–Ω–¥—É —Ç—É—Ç–∞—à—Ç—ã—Ä—É—É “Ø—á“Ø–Ω –±–∏–ª–¥–∏—Ä–º–µ —Ç–æ–ª—Ç—É—Ä—É—É –∫–µ—Ä–µ–∫. –ë—É–ª “Ø—á“Ø–Ω –±–∏—Ä –Ω–µ—á–µ —Å—É—Ä–æ–æ–ª–æ—Ä–≥–æ –∂–æ–æ–ø –±–µ—Ä“Ø“Ø —Ç–∞–ª–∞–ø –∫—ã–ª—ã–Ω–∞—Ç.  –î–∞—è—Ä—Å—ã–∑–±—ã? ', reply_markup=kb.inl_connection)


### –û –∫–æ–º–ø–∞–Ω–∏–∏
@router.message(F.text == '–ö–æ–º–ø–∞–Ω–∏—è –∂”©–Ω“Ø–Ω–¥”©')
async def connect_intercom(message: Message):
    cm.upsert_report('about_us')
    
    path_to_image = 'photo/about_us.jpg'
    photo = FSInputFile(path_to_image)
    
    text = '–ò–Ω—Ç–µ—Ä–∫–æ–º - —ç—Ç–æ –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É—Å–ª—É–≥–∏ –£–º–Ω–æ–π –¥–æ–º–æ—Ñ–æ–Ω–∏–∏ —Å 2023 –≥–æ–¥–∞. ‚ú®\n\n–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –∫–æ–º—Ñ–æ—Ä—Ç–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∂–∏—Ç–µ–ª—è–º –º–Ω–æ–≥–æ—ç—Ç–∞–∂–Ω—ã—Ö –¥–æ–º–æ–≤, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –¥–æ–º–æ—Ñ–æ–Ω–æ–≤ —Å –≤–∏–¥–µ–æ–Ω–∞–±–ª—é–¥–µ–Ω–∏–µ–º –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º—ã –¥–µ–ª–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –Ω–µ —Ç–æ–ª—å–∫–æ –¥–æ–º–∞, –Ω–æ –∏ –≥–æ—Ä–æ–¥ –≤ —Ü–µ–ª–æ–º. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞—à–∞ –±–∞–∑–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±–æ–ª–µ–µ 20000 —á–µ–ª–æ–≤–µ–∫.\n\nüïí –†–∞–±–æ—á–∏–π –≥—Ä–∞—Ñ–∏–∫ –æ—Ñ–∏—Å–∞:\n–ü–Ω-–ü—Ç: —Å 9:00 –¥–æ 18:00\n–°–±, –í—Å - –≤—ã—Ö–æ–¥–Ω—ã–µ\n\n–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —á–µ—Ä–µ–∑ Whatsapp\n–ü–Ω-–í—Å —Å 9:00 –¥–æ 20:00\n\nüìû –ö–æ–ª–ª-—Ü–µ–Ω—Ç—Ä:\n0707888822\n0997888822\n\nüìç –ê–¥—Ä–µ—Å:\n—É–ª. –§—Ä—É–Ω–∑–µ, 533–ê (–ë–∏—à–∫–µ–∫)'
    await message.answer_photo(caption=text, reply_markup=kb.inl_about_us, photo=photo)
    

### –ö—Ç–æ —Ç–∞–∫–∞—è –°–∏—é?
@router.message(F.text == '–°–∏—é –¥–µ–≥–µ–Ω –∫–∏–º?')
async def who_im(message: Message):
    cm.upsert_report('who_im')
    
    path_to_image = 'photo/seeu.jpg'
    photo = FSInputFile(path_to_image)
    
    text = '–°–∏—é - –º–∞—Å–∫–æ—Ç –∫–æ–º–ø–∞–Ω–∏—è—Å—ã "–ò–Ω—Ç–µ—Ä–∫–æ–º". –ë—É–ª –¥–æ–º–æ—Ñ–æ–Ω –∫–∞–º–µ—Ä–∞—Å—ã–Ω—ã–Ω –∫”©–∑“Ø–Ω –±–∏–ª–¥–∏—Ä–≥–µ–Ω –∫–∞–∞—Ä–º–∞–Ω. "–°–∏—é" –∞—Ç—ã –∞–Ω–≥–ª–∏—Å —Ç–∏–ª–∏–Ω–¥–µ–≥–∏ "See You" –¥–µ–≥–µ–Ω —Å”©–∑–¥”©–Ω –∫–µ–ª–∏–ø —á—ã–∫–∫–∞–Ω, "–ú–µ–Ω —Å–µ–Ω–∏ –∫”©—Ä“Ø–ø –∂–∞—Ç–∞–º"–¥–µ–≥–µ–Ω–¥–∏ –±–∏–ª–¥–∏—Ä–µ—Ç. –ö–∞–∞—Ä–º–∞–Ω “Ø–π–¥“Ø–Ω –∂–∞—à–æ–æ—á—É–ª–∞—Ä—ã–Ω —á–æ–æ—á—É–Ω –∞–¥–∞–º–¥–∞—Ä–¥–∞–Ω –∫–æ—Ä–≥–æ–π—Ç, —Ç–∞—Ä—Ç–∏–ø—Ç–∏ —Å–∞–∫—Ç–∞–π—Ç –∂–∞–Ω–∞ —Ç—É—Ç—É–º–≥–∞ –∫–∞–º –∫”©—Ä”©—Ç.'
    await message.answer_photo(photo, text)


### –ñ–∞“£—ã –∞—á–∫—ã—á—Ç—ã –∫–∞–π–¥–∞–Ω —Å–∞—Ç—ã–ø –∞–ª—Å–∞–º –±–æ–ª–æ–º?
@router.message(F.text == '–ñ–∞“£—ã –∞—á–∫—ã—á—Ç—ã –∫–∞–π–¥–∞–Ω —Å–∞—Ç—ã–ø –∞–ª—Å–∞–º –±–æ–ª–æ–º?')
async def where_ibuy(message: Message):
    cm.upsert_report('where_buy')
    
    text = '–ê—á–∫—ã—á—Ç—ã –¥–æ–º–∫–æ–º–¥–æ–Ω –∂–µ –∫–µ“£—Å–µ–±–∏–∑–¥–µ–Ω —Ç–∞–ø—Å–∞ –±–æ–ª–æ—Ç.\n\n –ú–∞–∞–ª—ã–º–∞—Ç “Ø—á“Ø–Ω —Ç–µ–ª–µ—Ñ–æ–Ω–¥–æ—Ä:\n0707888822\n0997888822\n\–ò—à—Ç”©”© –≥—Ä–∞—Ñ–∏–≥–∏:\n9:00 - 18:00 –º–µ–Ω–µ–Ω –î—à - –ñ–º —Ç\n\–ø –î–∞—Ä–µ–≥–∏: –ú–æ–ª–¥–æ–∫—É–ª–æ–≤–∞ –∫”©—á., 10/–∞3(–ë–∏—à–∫–µ–∫)'
    await message.answer(text, reply_markup=kb.inl_where_ibuy)


@router.callback_query(F.data == 'report')
async def handle_report(callback: CallbackQuery):    
    user = callback.from_user.id
    
    cm.reset_state(user)
    cm.upsert_user_state(user, 1)

    await callback.answer('–ö—ã–∑—ã–≥—É—É“£—É–∑ “Ø—á“Ø–Ω —Ä–∞—Ö–º–∞—Ç')

    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.bot.send_message(user, '–ê—Ç—ã“£—ã–∑ –∫–∏–º? (–§–ò–û)', reply_markup=kb.cancel)


@router.message(lambda message: cm.get_user_state(message.from_user.id) is not None and cm.get_user_state(message.from_user.id)[0] == 1)
async def handle_name(message: Message):
    user = message.from_user.id
    text = message.text

    cm.upsert_ticket(user, 'name', text)
    cm.upsert_user_state(user, 2)

    await message.answer('–î–æ–º–æ—Ñ–æ–Ω–¥—É –∫–∞–π—Å—ã –¥–∞—Ä–µ–∫–∫–µ –æ—Ä–Ω–æ—Ç–∫—É“£—É–∑ –∫–µ–ª–µ—Ç?', reply_markup=kb.cancel)


@router.message(lambda message: cm.get_user_state(message.from_user.id) is not None and cm.get_user_state(message.from_user.id)[0] == 2)
async def handle_address(message: Message):
    user = message.from_user.id
    text = message.text
    cm.upsert_ticket(user, 'address', text)
    cm.upsert_user_state(user, 3)

    await message.answer('“Æ–π–¥“Ø–Ω —Ç“Ø—Ä“Ø?', reply_markup=kb.inl_inter)


### Have u intercom
@router.callback_query(F.data == 'apparts')
async def yes_we_have(callback: CallbackQuery):
    user = callback.from_user.id
    
    cm.upsert_ticket(user, 'inter_type', '–ö”©–ø –∫–∞–±–∞—Ç—Ç—É—É “Ø–π')
    cm.upsert_user_state(user, 4)

    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.bot.send_message(user, '–°–∏–∑ –º–µ–Ω–µ–Ω –∫–∞–Ω—Ç–∏–ø –±–∞–π–ª–∞–Ω—ã—à—Å–∞ –±–æ–ª–æ—Ç?', reply_markup=kb.inl_connection_type)
        

@router.callback_query(F.data == 'house')
async def house(callback: CallbackQuery):
    user = callback.from_user.id
    
    cm.upsert_ticket(user, 'inter_type', '–ñ–µ—Ä “Ø–π')
    cm.upsert_user_state(user, 4)

    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.bot.send_message(user, '–°–∏–∑ –º–µ–Ω–µ–Ω –∫–∞–Ω—Ç–∏–ø –±–∞–π–ª–∞–Ω—ã—à—Å–∞ –±–æ–ª–æ—Ç?', reply_markup=kb.inl_connection_type)


### Contact type
@router.callback_query(F.data == 'whats')
async def whats(callback: CallbackQuery):
    user = callback.from_user.id
    
    cm.upsert_ticket(user, 'callback_type', '–ú–∞–≥–∞ Whatsapp\'–∫–∞ –∂–∞–∑—ã“£—ã–∑')
    cm.upsert_user_state(user, 5)

    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.bot.send_message(user, '–¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä–∏“£–∏–∑–¥–∏ –∂–∞–∑—ã“£—ã–∑.', reply_markup=kb.cancel)


@router.callback_query(F.data == 'mobile')
async def whats(callback: CallbackQuery):
    user = callback.from_user.id
    
    cm.upsert_ticket(user, 'callback_type', '–ú–∞–≥–∞ —á–∞–ª—ã“£—ã–∑')
    cm.upsert_user_state(user, 5)

    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.bot.send_message(user, '–¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä–∏“£–∏–∑–¥–∏ –∂–∞–∑—ã“£—ã–∑.', reply_markup=kb.cancel)


@router.message(lambda message: cm.get_user_state(message.from_user.id) is not None and cm.get_user_state(message.from_user.id)[0] == 5)
async def handle_phone(message: Message):
    user = message.from_user.id
    text = message.text
    cm.upsert_ticket(user, 'num', text)
    cm.upsert_user_state(user, 6)

    await message.answer('–≠—Å–∫–µ—Ä—Ç“Ø“Ø–ª”©—Ä–¥“Ø –∂–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π–ª–µ—Ä–¥–∏ –∂–∞–∑—ã“£—ã–∑, —ç–≥–µ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∂–æ–∫ –±–æ–ª—Å–æ, "–∂–æ–∫" –¥–µ–ø –∂”©–Ω”©—Ç“Ø“£“Ø–∑.', reply_markup=kb.cancel)


@router.message(lambda message: cm.get_user_state(message.from_user.id) is not None and cm.get_user_state(message.from_user.id)[0] == 6)
async def handle_description(message: Message):
    user = message.from_user.id
    text = message.text
    cm.upsert_ticket(user, 'description', text)
    cm.reset_state(user)

    get_data = cm.get_ticket(user)
    date = message.date.today().strftime("%Y-%m-%d %H:%M")

    await message.bot.send_message(
        -1002009533675,
        f'–û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{message.from_user.username}. \n–í—Ä–µ–º—è: {date}\
        \n\n–í–æ–ø—Ä–æ—Å: –ê—Ç—ã“£—ã–∑ –∫–∏–º? (–§–ò–û)\n–û—Ç–≤–µ—Ç: {get_data[1]}\
        \n\n–í–æ–ø—Ä–æ—Å: –î–æ–º–æ—Ñ–æ–Ω–¥—É –∫–∞–π—Å—ã –¥–∞—Ä–µ–∫–∫–µ –æ—Ä–Ω–æ—Ç–∫—É“£—É–∑ –∫–µ–ª–µ—Ç?\n–û—Ç–≤–µ—Ç: {get_data[2]}\
        \n\n–í–æ–ø—Ä–æ—Å: “Æ–π–¥“Ø–Ω —Ç“Ø—Ä“Ø?\n–û—Ç–≤–µ—Ç: {get_data[6]}\
        \n\n–í–æ–ø—Ä–æ—Å: –°–∏–∑ –º–µ–Ω–µ–Ω –∫–∞–Ω—Ç–∏–ø –±–∞–π–ª–∞–Ω—ã—à—Å–∞ –±–æ–ª–æ—Ç?\n–û—Ç–≤–µ—Ç: {get_data[3]}\
        \n\n–í–æ–ø—Ä–æ—Å: –¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä–∏“£–∏–∑–¥–∏ –∂–∞–∑—ã“£—ã–∑\n–û—Ç–≤–µ—Ç: {get_data[5]}\
        \n\n–í–æ–ø—Ä–æ—Å: –≠—Å–∫–µ—Ä—Ç“Ø“Ø–ª”©—Ä–¥“Ø –∂–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π–ª–µ—Ä–¥–∏ –∂–∞–∑—ã“£—ã–∑, —ç–≥–µ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∂–æ–∫ –±–æ–ª—Å–æ, "–∂–æ–∫" –¥–µ–ø –∂”©–Ω”©—Ç“Ø“£“Ø–∑.\n–û—Ç–≤–µ—Ç: {get_data[4]}'
    )

    await message.answer('–°–∏–∑–¥–∏–Ω –±–∞–π–ª–∞–Ω—ã—à—ã“£—ã–∑ –∏–π–≥–∏–ª–∏–∫—Ç“Ø“Ø –∂”©–Ω”©—Ç“Ø–ª–¥“Ø! –ë–∏–ª–¥–∏—Ä–º–µ–Ω–∏ –∫–∞—Ä–æ–æ –º”©”©–Ω”©—Ç“Ø-1-2 –∏—à –∫“Ø–Ω.\n\n–ë–∞—Å–∞, –±–∏–∑–¥–µ –∂–∞“£—ã–ª—ã–∫—Ç–∞—Ä Telegram-–∫–∞–Ω–∞–ª –∂–∞–Ω–∞ Instagram –±–∞—Ä, –∞–Ω–¥–∞ –±–∏–∑ —ç“£ –∞–∫—ã—Ä–∫—ã –∂–∞“£—ã–ª—ã–∫—Ç–∞—Ä–¥—ã –∂–∞—Ä—ã—è–ª–∞–π–±—ã–∑. –ñ–∞–∑—ã–ª—ã“£—ã–∑ - –±–∏–∑ –º–µ–Ω–µ–Ω –∫—ã–∑—ã–∫—Ç—É—É! ü©µ', reply_markup=kb.contacts)


### –ê–∫—ã–ª–¥—É—É –¥–æ–º–æ—Ñ–æ–Ω —ç–º–Ω–µ –∫—ã–ª–∞ –∞–ª–∞—Ç —ç–∫–µ–Ω–∏–Ω –∞–π—Ç
@router.message(F.text == '–ê–∫—ã–ª–¥—É—É –¥–æ–º–æ—Ñ–æ–Ω —ç–º–Ω–µ –∫—ã–ª–∞ –∞–ª–∞—Ç —ç–∫–µ–Ω–∏–Ω –∞–π—Ç')
async def about_intercom(message: Message):
    cm.upsert_report('tell_about')
    
    path_to_image = 'photo/1.jpg'
    photo = FSInputFile(path_to_image)
    
    text = "–ë–∏–∑–¥–∏–Ω –¥–æ–º–æ—Ñ–æ–Ω —Å–∏—Å—Ç–µ–º–∞—Å—ã –≤–∏–¥–µ–æ–±–∞–π–∫–æ–æ –∂–∞–Ω–∞ —Ç–∏—Ä–∫–µ–º–µ –º–µ–Ω–µ–Ω –±–∏—Ä–≥–µ –∏—à—Ç–µ–π—Ç. –ö–∞–º–µ—Ä–∞–ª–∞—Ä –∫–æ—Ä–æ–æ–≥–æ, –∫–∏—Ä–µ –±–µ—Ä–∏—à–∫–µ, —É–Ω–∞–∞ —Ç–æ–∫—Ç–æ—Ç—É—É—á—É –∂–∞–π–≥–∞, –±–∞–ª–¥–∞—Ä –∞—è–Ω—Ç—á–∞—Å—ã–Ω–∞ –∂–∞–Ω–∞ –∂–∞—à–æ–æ—á—É–ª–∞—Ä–¥—ã–Ω —Ç–∞–ª–∞–±—ã –±–æ—é–Ω—á–∞ –∫–∞–∞–ª–∞–≥–∞–Ω –∂–µ—Ä–≥–µ –æ—Ä–Ω–æ—Ç—É–ª–∞—Ç. üòâ\n\n“Æ–π–¥”© –∂–µ–∫–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É“£—É–∑, –±–∞–ª–¥–∞—Ä—ã“£—ã–∑, —É–ª–≥–∞–π–≥–∞–Ω “Ø–π-–±“Ø–ª”© –º“Ø—á”©–ª”©—Ä“Ø“£“Ø–∑ –∂–µ –±–∞–∞–ª—É—É –±—É—é–º–¥–∞—Ä—ã“£—ã–∑ –±–∞—Ä–±—ã?"

    await message.answer_photo(photo, text, reply_markup=kb.inl_about)


@router.callback_query(F.data == 'ihave')    
async def ihave(callback: CallbackQuery):
    user = callback.from_user.id
    path_to_image = 'photo/2.jpg'
    photo = FSInputFile(path_to_image)
    
    text = "–ë–∞—Ä–¥—ã–∫ –∫–∞–º–µ—Ä–∞–ª–∞—Ä–¥–∞–Ω —Ç“Ø–∑ –±–µ—Ä“Ø“Ø –±–∏–∑–¥–∏–Ω –∫–æ–ª–¥–æ–Ω–º–æ –∞—Ä–∫—ã–ª—É—É –∂–µ—Ç–∫–∏–ª–∏–∫—Ç“Ø“Ø. –°–∏–∑ –∫–∞–∞–ª–∞–≥–∞–Ω —É–±–∞–∫—Ç–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É“£—É–∑–¥—É–Ω –∫–æ–æ–ø—Å—É–∑–¥—É–≥—É–Ω –∫–∞–º—Å—ã–∑–¥–∞–π –∞–ª–∞—Å—ã–∑, –±–∞–ª–∞“£—ã–∑ –∫–∏–º –º–µ–Ω–µ–Ω –æ–π–Ω–æ–ø –∂–∞—Ç–∫–∞–Ω—ã–Ω –∫”©—Ä”© –∞–ª–∞—Å—ã–∑ –∂–∞–Ω–∞ –∂–∞–≥—ã–º—Å—ã–∑ –∂–∞–≥–¥–∞–π –±–æ–ª–≥–æ–Ω —É—á—É—Ä–¥–∞ –∫–∞–º–µ—Ä–∞–ª–∞—Ä–¥–∞–Ω –∂–∞–∑–¥—ã—Ä–∞ –∞–ª–∞—Å—ã–∑. üëç\n\n‚ÄºÔ∏è –ò –±–∞—Å–∞, –∂–∞–∑—É—É–ª–∞—Ä –±—É–ª—É—Ç –∞—Ä—Ö–∏–≤–∏–Ω–¥–µ 5 –∫“Ø–Ω —Å–∞–∫—Ç–∞–ª–∞—Ç, –∞–Ω–¥–∞–Ω –∫–∏–π–∏–Ω –∂–æ–∫ –∫—ã–ª—ã–Ω–∞—Ç. –ë–∏—Ä–æ–∫ —Å–∏–∑ –∂–∞–∑—É—É–ª–∞—Ä–¥—ã —Å–∞–∫—Ç–∞–ø –∫–∞–ª–≥—ã“£—ã–∑ –∫–µ–ª—Å–µ, –∞–ª–∞—Ä–¥—ã —Ç–µ–ª–µ—Ñ–æ–Ω—É“£—É–∑–≥–∞ –æ“£–æ–π –∂“Ø–∫—Ç”©–ø –∞–ª—Å–∞“£—ã–∑ –±–æ–ª–æ—Ç. üí´"    

    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.bot.send_photo(user, caption=text, reply_markup=kb.inl_letsgo, photo=photo)
    

@router.callback_query(F.data == 'gonext')
async def gonext(callback: CallbackQuery):
    user = callback.from_user.id
    
    text = "–î–æ–º–æ—Ñ–æ–Ω –∫–∞–º–µ—Ä–∞—Å—ã –¥–∞—Ç—á–∏–∫—Ç–µ—Ä –º–µ–Ω–µ–Ω –∂–∞–±–¥—ã–ª–≥–∞–Ω, –∞–Ω—ã–Ω –∞—Ä–∫–∞—Å—ã–Ω–¥–∞ –∞–ª –∂“Ø–∑–¥”©—Ä–¥“Ø —Ç–∞–∞–Ω—ã–ø, —Ç–∏—Ä“Ø“Ø –∞–¥–∞–º–¥–∞—Ä–¥—ã —Å“Ø—Ä”©—Ç—Ç”©—Ä–¥”©–Ω –∞–π—ã—Ä–º–∞–ª–∞–π –∞–ª–∞—Ç. üòÆ\n\n–ö–∞–º–µ—Ä–∞ –æ—à–æ–Ω–¥–æ–π —ç–ª–µ —É–ª—å—Ç—Ä–∞ –∂–∞—Ä—ã–∫ —Å–µ–∑–≥–∏—á –º–∞—Ç—Ä–∏—Ü–∞–≥–∞ —ç—ç, –±—É–ª —Ç“Ø—Å—Ç“Ø“Ø —Å“Ø—Ä”©—Ç—Ç“Ø —Ç“Ø–Ω–∫“Ø—Å“Ø–Ω –¥–∞ –∞–≥—ã–ª—Ç—É—É–≥–∞ –º“Ø–º–∫“Ø–Ω–¥“Ø–∫ –±–µ—Ä–µ—Ç. üòÄüëç\n\n–ë–∏–∑ –∞–∑—ã—Ä –∞–∫—á–∞–Ω—ã —É–Ω—É—Ç—É–ø –∫–∞–ª—Å–∞–∫, –∫–æ—Ç–æ—Ä—É—É–ª–∞—Ä —Ç”©–ª”©–ø –∫–æ–π—É—É–≥–∞, –∂–µ –∞—á–∫—ã—á—Ç—ã —É–Ω—É—Ç—Å–∞–∫, —ç—à–∏–∫—Ç–∏ Face ID –º–µ–Ω–µ–Ω –∫–∏—Ä“Ø“Ø–≥”© –º“Ø–º–∫“Ø–Ω—á“Ø–ª“Ø–≥“Ø–±“Ø–∑ –±–∞—Ä —É–±–∞–∫—ã—Ç—Ç–∞ –∂–∞—à–∞–π–±—ã–∑.”®—Ç“Ø“£“Ø–∑"
    
    await callback.message.edit_reply_markup(None)
    await callback.bot.send_message(user, text=text, reply_markup=kb.inl_without)
    

@router.callback_query(F.data == 'without_key')
async def whats_this(callback: CallbackQuery):
    user = callback.from_user.id
    path_to_image = 'photo/3.jpg'
    photo = FSInputFile(path_to_image)
    
    text = "‚úÖ –ê—á–∫—ã—á—Å—ã–∑ —ç—à–∏–∫—Ç–∏ –∞—á—É—É–Ω—É–Ω 3 –∂–æ–ª—É:\n\n\n\n1. –ë–µ—Ç—Ç–∏ —Ç–∞–∞–Ω—É—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã –±–æ—é–Ω—á–∞;\n2. –ö–æ–ª–¥–æ–Ω–º–æ–¥–æ–≥—É –æ–Ω–ª–∞–π–Ω –∞—á–∫—ã—á –∞—Ä–∫—ã–ª—É—É;\n3. –®–∏–ª—Ç–µ–º–µ –∞—Ä–∫—ã–ª—É—É —É–±–∞–∫—Ç—ã–ª—É—É –º“Ø–º–∫“Ø–Ω—á“Ø–ª“Ø–∫ –±–µ—Ä–∏“£–∏–∑.\n\n\n–∂–∞–Ω–∞ –±–∏–∑–¥–∏–Ω –∞–±–æ–Ω–µ–Ω—Ç—Ç–µ—Ä–¥–∏–Ω –∂–∞—à—ã—Ä—É—É–Ω –ª–∞–π—Ñ—Ö–∞–∫:\n\n\n–¥–æ–º–æ—Ñ–æ–Ω–¥–æ–Ω ”©–∑“Ø“£“Ø–∑–≥”© —á–∞–ª—ã–ø, —Ç–µ–ª–µ—Ñ–æ–Ω –∞—Ä–∫—ã–ª—É—É —ç—à–∏–∫—Ç–∏ –∞—á—ã“£—ã–∑."
    
    await callback.message.edit_reply_markup(None)
    await callback.bot.send_photo(user, caption=text, reply_markup=kb.inl_keys, photo=photo)
    

@router.callback_query(F.data == 'online_key')
async def whats_this(callback: CallbackQuery):
    user = callback.from_user.id
    path_to_image = 'photo/4.jpg'
    photo = FSInputFile(path_to_image)
    
    text = 'üîë –û–Ω–ª–∞–π–Ω –∞—á–∫—ã—á-–±—É–ª –∫–æ–ª–¥–æ–Ω–º–æ–¥–æ–≥—É –±–∞—Å–∫—ã—á –º–µ–Ω–µ–Ω —ç—à–∏–∫—Ç–∏ –∞—á—É—É –º“Ø–º–∫“Ø–Ω—á“Ø–ª“Ø–≥“Ø.'
    
    await callback.message.edit_reply_markup(None)
    await callback.bot.send_photo(user, caption=text, reply_markup=kb.inl_keys_ex, photo=photo)


@router.callback_query(F.data == 'time_key')
async def time_key(callback: CallbackQuery):
    user = callback.from_user.id
    path_to_image = 'photo/4.jpg'
    photo = FSInputFile(path_to_image)
    
    text = 'üïê –£–±–∞–∫—Ç—ã–ª—É—É –∫–∏—Ä“Ø“Ø –º“Ø–º–∫“Ø–Ω—á“Ø–ª“Ø–≥“Ø ‚Äî –±—É–ª –¥–æ—Å—Ç–æ—Ä—É“£—É–∑–≥–∞ –∂–∞–Ω–∞ –∂–∞–∫—ã–Ω–¥–∞—Ä—ã“£—ã–∑–≥–∞ –∫–∏—Ä“Ø“Ø–≥”© –º“Ø–º–∫“Ø–Ω—á“Ø–ª“Ø –∂”©–Ω”©—Ç“Ø“Ø. –®–∏–ª—Ç–µ–º–µ–Ω–∏ –∫–∞–∞–ª–∞–≥–∞–Ω —Å–æ—Ü–∏–∞–ª–¥—ã–∫ —Ç–∞—Ä–º–∞–∫—Ç–∞ —à–∏–ª—Ç–µ–º–µ–ª–µ—Ä –º–µ–Ω–µ–Ω  –±”©–ª“Ø—à—Å”©“£“Ø–∑ –±–æ–ª–æ—Ç (WhatsApp, Instagram, Telegram –∂.–±.). –°–∏–∑–¥–∏–Ω –∫–æ–Ω–æ–∫—Ç–æ—Ä—É“£—É–∑ —à–∏–ª—Ç–µ–º–µ–Ω–∏ –±–∞—Å—ã–ø, —ç—à–∏–∫—Ç–∏ –∞—á—ã—à—ã –∫–µ—Ä–µ–∫. –ö–æ–Ω–æ–∫—Ç–æ—Ä–¥—É –∫“Ø—Ç–∫”©–Ω–¥”© –∂–∞–Ω–∞ —ç—à–∏–∫–∫–µ –∞–ª–∞–∫—Å—ã–≥—ã“£—ã–∑ –∫–µ–ª–≥–µ–Ω–¥–µ —ã“£–≥–∞–π–ª—É—É.\n\n –£–±–∞–∫—Ç—ã–ª—É—É –∫–∏—Ä“Ø“Ø–Ω“Ø 2, 4, 8, 12 –∂–µ 24 —Å–∞–∞—Ç–∫–∞ –∫–æ—é—É–≥–∞ –±–æ–ª–æ—Ç.'
    
    await callback.message.edit_reply_markup(None)
    await callback.bot.send_photo(user, caption=text, reply_markup=kb.inl_keys_ex, photo=photo)


@router.callback_query(F.data == 'keys_ex')
async def keys_ex(callback: CallbackQuery):
    user = callback.from_user.id
    path_to_image = 'photo/5.jpg'
    photo = FSInputFile(path_to_image)
    
    text = '–ê–ª–±–µ—Ç—Ç–µ! –°–∞–ª—Ç—Ç—É—É –¥–æ–º–æ—Ñ–æ–Ω —Å“Ø–π“Ø“Ø—á“Ø–ª”©—Ä“Ø –∂–∞–Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∏—Å—Ç—Ç–µ—Ä “Ø—á“Ø–Ω –±–∏–∑–¥–µ –∫”©—á“Ø—Ä“Ø–ª–≥“Ø–∑ –∞—á–∫—ã—á—Ç–∞—Ä –±–∞—Ä. –ê—á–∫—ã—á—Ç–∞—Ä–¥—ã–Ω –∂–µ–∫–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è–ª—ã–∫ –Ω–æ–º–µ—Ä–∏ –±–∞—Ä –∂–∞–Ω–∞ —à–∏—Ñ—Ä–ª”©”© —Ç—É—Ç—É–º—É –º–µ–Ω–µ–Ω –∫–æ—Ä–≥–æ–ª–≥–æ–Ω. –ê–ª–∞—Ä–¥—ã –ø–æ–¥–∑–µ–º–∫–∞–¥–∞ –∫”©—á“Ø—Ä“Ø“Ø –æ“£–æ–π —ç–º–µ—Å, –±—É–ª —Å—ã—Ä—Ç—Ç–∞–Ω –∫–µ–ª–≥–µ–Ω–¥–µ—Ä–¥–∏–Ω –∫–∏—Ä–µ –±–µ—Ä–∏—à–∏–Ω–µ —Ç–æ—Å–∫–æ–æ–ª–¥—É–∫ –∂–∞—Ä–∞—Ç–∞—Ç. üòå'
    
    await callback.message.edit_reply_markup(None)
    await callback.bot.send_photo(user, caption=text, reply_markup=kb.inl_how_work, photo=photo)
    

@router.callback_query(F.data == 'how_work')
async def how_work(callback: CallbackQuery):
    user = callback.from_user.id
    
    text = '–ú—ã–∫—Ç—ã —Å—É—Ä–æ–æ! –ö–µ–ª–≥–∏–ª–µ, —Å–∏–∑ —Å–∏—Å—Ç–µ–º–∞–≥–∞ —Ç—É—Ç–∞—à–∫–∞–Ω—Å—ã–∑ –∂–∞–Ω–∞ –∫–æ–Ω–æ–∫ –∫–µ–ª–¥–∏ –¥–µ–ø —ç–ª–µ—Å—Ç–µ—Ç–∏–ø –∫”©—Ä”©–ª“Ø. –ê–ª —Å–∏–∑–¥–∏–Ω –¥–æ–º–æ—Ñ–æ–Ω—É“£—É–∑–¥–∞–≥—ã –±–∞—Ç–∏—Ä–¥–∏–Ω –Ω–æ–º–µ—Ä–∏–Ω —Ç–µ—Ä–∏–ø, –∂–æ–æ–ø –∫“Ø—Ç”©—Ç. –ß–∞–ª—É—É —Ç–µ–ª–µ—Ñ–æ–Ω—É“£—É–∑–≥–∞ –≤–∏–¥–µ–æ —á–∞–ª—É—É —Ç“Ø—Ä“Ø–Ω–¥”© –∫–µ–ª–µ—Ç. –ë—É–ª —É—á—É—Ä–¥–∞ —Å–∏–∑ –∫–∏—á–∏–Ω–µ–∫–µ–π –±–∞–ª–∞–Ω—ã –±–∞–≥—ã–ø –∂–∞—Ç–∞—Å—ã–∑ –∂–µ –∫–µ—á–∫–∏ —Ç–∞–º–∞–∫—Ç—ã –¥–∞—è—Ä–¥–∞–ø –∂–∞—Ç–∞—Å—ã–∑ (–∂–µ —ç–∫”©”© —Ç–µ“£ —á–æ–≥—É—É). –°–∏–∑ –∫—ã–ª–∞ —Ç—É—Ä–≥–∞–Ω –Ω–µ—Ä—Å–µ-–±—É–ª —á–∞–∫—ã—Ä—ã–∫—Ç—ã –∫–∞–±—ã–ª –∞–ª—É—É. –ê–Ω–¥–∞–Ω –∫–∏–π–∏–Ω, —Å–∏–∑ –∫”©—Ä“Ø–ø, —Å“Ø–π–ª”©—à“Ø–ø, –∞–Ω–¥–∞–Ω –∫–∏–π–∏–Ω –∫–æ–Ω–æ–∫—Ç—É –∫–∏—Ä–≥–∏–∑–µ—Å–∏–∑–±–∏ –∂–µ –∂–æ–∫–ø—É, —á–µ—á–µ –∞–ª–∞—Å—ã–∑. ü§óüëç\n\n–ê–Ω–¥–∞–Ω —Ç—ã—à–∫–∞—Ä—ã, —Å–∏–∑ “Ø–π–¥”© –∂–æ–∫ –±–æ–ª—Å–æ“£—É–∑ –¥–∞–≥—ã, –±–∞—à–∫–∞ –º–∞–º–ª–µ–∫–µ—Ç—Ç–µ –±–æ–ª—Å–æ“£—É–∑ –¥–∞–≥—ã, —á–∞–ª—É—É–ª–∞—Ä–¥—ã –∫–∞–±—ã–ª –∞–ª—É—É–≥–∞ –±–æ–ª–æ—Ç. –´“£–≥–∞–π–ª—É—É —ç–∫–µ–Ω–±–∏?üòè'
    
    await callback.message.edit_reply_markup(None)
    await callback.bot.send_message(user, text=text, reply_markup=kb.inl_what_if)
    
    
@router.callback_query(F.data == 'good')
async def good(callback: CallbackQuery):
    user = callback.from_user.id
    
    text = '–î–æ–º–æ—Ñ–æ–Ω –∏—à—Ç–µ–±–µ–π –∫–∞–ª–≥–∞–Ω —É—á—É—Ä–¥–∞, —Ç—ã–Ω—á—Å—ã–∑–¥–∞–Ω—É—É–Ω—É–Ω –∫–∞–∂–µ—Ç–∏ –∂–æ–∫ –∂–∞–Ω–∞ –∞–Ω—ã –æ“£–¥–æ–π —Ç—É—Ä–≥–∞–Ω —Ç–µ—Ö–Ω–∏–∫—Ç–∏ –∏–∑–¥”©”©–Ω“Ø–Ω –∫–∞–∂–µ—Ç–∏ –∂–æ–∫. –ë–∏–∑–≥–µ –∫”©–π–≥”©–π –∂”©–Ω“Ø–Ω–¥”© –∞–π—Ç—ã–ø –∫–æ—é—É –∂–µ—Ç–∏—à—Ç“Ø“Ø, –±–∏–∑ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∂“Ø—Ä–≥“Ø–∑“Ø–ø, –¥–æ–º–æ—Ñ–æ–Ω–¥—É —Ç—É—É—Ä–∞ –∞–±–∞–ª–≥–∞ –∫–µ–ª—Ç–∏—Ä–µ–±–∏–∑üòâ. –¢–∞–±–∏–≥—ã–π —Å–µ–±–µ–ø—Ç–µ—Ä–¥–µ–Ω —É–ª–∞–º –±—É–∑—É–ª—É–ø –∫–∞–ª—Å–∞, –∞–Ω—ã –±–µ–∫–µ—Ä –∞–ª–º–∞—à—Ç—ã—Ä–∞–±—ã–∑.'
    
    await callback.message.edit_reply_markup(None)
    await callback.bot.send_message(user, text=text, reply_markup=kb.inl_how_much)
    

@router.callback_query(F.data == 'how_much')
async def how_much(callback: CallbackQuery):
    user = callback.from_user.id
    
    text = '–≠–º–∏ –º–µ–Ω —Å–∏–∑–¥–µ—Ä–¥–∏ –±–∏–∑–¥–∏–Ω —Å–∞–π—Ç–∫–∞ –∫–∏—Ä–∏–ø, –±–∏–∑–¥–∏–Ω –∫–æ–º–ø–∞–Ω–∏—è–Ω—ã–Ω —Ç–∞—Ä–∏—Ñ—Ç–µ—Ä–∏ –º–µ–Ω–µ–Ω —Ç–∞–∞–Ω—ã—à—É—É“£—É–∑–¥–∞—Ä–¥—ã —Å—É–Ω—É—à—Ç–∞–π–º. –ú–∞–∞–ª—ã–º–∞—Ç –ø–∞–π–¥–∞–ª—É—É –±–æ–ª–¥—É –¥–µ–ø –∏—à–µ–Ω–µ–º! ü•∞ü§ó‚¨áÔ∏è'
    
    await callback.message.edit_reply_markup(None)
    await callback.bot.send_message(user, text, reply_markup=kb.inl_find_money)
    

### –ü–∏–∫–∏—Ä/–¥–∞—Ç—Ç–∞–Ω—É—É –∫–∞–ª—Ç—ã—Ä–≥—ã–º –∫–µ–ª–µ—Ç
@router.message(F.text == '–ü–∏–∫–∏—Ä/–¥–∞—Ç—Ç–∞–Ω—É—É –∫–∞–ª—Ç—ã—Ä–≥—ã–º –∫–µ–ª–µ—Ç')
async def not_work(message: Message):
    text = '"–ö—ã–π—ã–Ω—á—ã–ª—ã–∫—Ç–∞—Ä–≥–∞ —Ç—É—à –±–æ–ª–≥–æ–Ω—É“£ –∞–±–¥–∞–Ω ”©–∫“Ø–Ω“Ø—á—Ç“Ø“Ø. –ú–µ–Ω —Å–∏–∑–≥–µ –∂–∞—Ä–¥–∞–º –±–µ—Ä–µ –∞–ª–∞–º –¥–µ–ø –∏—à–µ–Ω–µ–º! ü•∫ü§óü©µ\n\n–ö–µ–ª–≥–∏–ª–µ, —Ç“Ø—à“Ø–Ω”©–ª“Ø! –¢”©–º”©–Ω–¥”©–≥“Ø –º–µ–Ω—é–¥–∞–Ω —ã–ª–∞–π—ã–∫—Ç—É—É –±”©–ª“Ø–º–¥“Ø —Ç–∞–Ω–¥–∞“£—ã–∑. ‚¨áÔ∏è"'
    await message.answer(text, reply_markup=kb.not_work)


@router.message(F.text == '–ù–∞–∑–∞–¥')
async def back(message: Message):
    text = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    await message.answer(text, reply_markup=kb.helper)


### Face ID –∏—à—Ç–µ–±–µ–π –∂–∞—Ç–∞—Ç
@router.message(F.text == 'Face ID –∏—à—Ç–µ–±–µ–π –∂–∞—Ç–∞—Ç')
async def not_work(message: Message):
    cm.upsert_report('dwork_face')
    
    text = '–£–ª–∞–Ω—Ç—É—É–¥–∞–Ω –º—É—Ä—É–Ω, –º“Ø–º–∫“Ø–Ω –±–æ–ª–≥–æ–Ω —Å–µ–±–µ–ø—Ç–µ—Ä–¥–∏ –∂–∞–Ω–∞ –±–∏–∑–¥–∏–Ω –∫–µ“£–µ—à —ç—Å–∫–µ—Ä—Ç“Ø“Ø–±“Ø–∑–¥“Ø –∫–∞—Ä–∞–ø —á—ã–≥—ã“£—ã–∑. ü§ó‚¨áÔ∏è\n\n–¢—É—Ä—É–∫—Å—É–∑ –∂–µ –∞–ª—Å—ã–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–æ–º–æ—Ñ–æ–Ω–¥—É–Ω –∏—à—Ç–µ—à–∏–Ω–µ —Ç–∞–∞—Å–∏—Ä–∏–Ω —Ç–∏–π–≥–∏–∑–∏—à–∏ –º“Ø–º–∫“Ø–Ω, –∞–Ω—Ç–∫–µ–Ω–∏ –∞–ª —Ç–∞—Ä–º–∞–∫ –∞—Ä–∫—ã–ª—É—É –∏—à—Ç–µ–π—Ç.\n\n–ë–µ—Ç—Ç–∏ —Ç–∞–∞–Ω—É—É –∂–∞–∫—à—ã—Ä–∞–∞–∫ –∏—à—Ç–µ—à–∏ “Ø—á“Ø–Ω, –∫–æ–ª–¥–æ–Ω–º–æ–≥–æ —ç–∫–∏–¥–µ–Ω –∞—à—ã–∫ —Å“Ø—Ä”©—Ç –∂“Ø–∫—Ç”©”©–Ω“Ø —Å—É–Ω—É—à—Ç–∞–π–±—ã–∑. –°“Ø—Ä”©—Ç—Ç”©—Ä –∂–∞–∫—à—ã –∂–∞—Ä—ã–∫—Ç–∞, —Ç–æ—Å–∫–æ–æ–ª–¥—É–∫—Å—É–∑ –∂–∞–Ω–∞ –∞–∫—Å–µ—Å—Å—É–∞—Ä–ª–∞—Ä—Å—ã–∑ —Ç–∞—Ä—Ç—ã–ª–≥–∞–Ω—ã–Ω —Ç–µ–∫—à–µ—Ä–∏“£–∏–∑.'
    await message.answer(text, reply_markup=kb.inl_im_read)
    

@router.callback_query(F.data == 'im_read')
async def im_read(callback: CallbackQuery):
    user = callback.from_user.id
    
    text = '–≠–≥–µ—Ä –±—É–ª —ç—Å–∫–µ—Ä—Ç–º–µ —Å–∏–∑ “Ø—á“Ø–Ω –∏—à—Ç–µ–±–µ—Å–µ, –∞–Ω–¥–∞ –∞–¥–∏—Å—Ç–µ—Ä —Å–∏–∑–¥–∏–Ω ”©—Ç“Ø–Ω“Ø—á“Ø“£“Ø–∑–¥“Ø —Ç–µ–∑–∏—Ä—ç—ç–∫ –∏—à—Ç–µ–ø —á—ã–≥—ã–ø, –∫”©–π–≥”©–π–¥“Ø —á–µ—á–∏—à–∏ “Ø—á“Ø–Ω, –±–∏–ª–¥–∏—Ä–º–µ —Ç–æ–ª—Ç—É—Ä–∞–ª—ã. ü§ó\n\n–ë—É–ª –∫”©–ø —É–±–∞–∫—ã—Ç—Ç—ã —Ç–∞–ª–∞–ø –∫—ã–ª–±–∞–π—Ç-–°–∏–∑ –±–∏—Ä –Ω–µ—á–µ —Å—É—Ä–æ–æ–ª–æ—Ä–≥–æ –∂–æ–æ–ø –±–µ—Ä–∏—à–∏“£–∏–∑ –∫–µ—Ä–µ–∫...\n\n–ê—Ä –±–∏—Ä —Å—É—Ä–æ–æ–≥–æ –±–∏—Ä –±–∏–ª–¥–∏—Ä“Ø“Ø –º–µ–Ω–µ–Ω –∂–æ–æ–ø –∂”©–Ω”©—Ç“Ø“£“Ø–∑. –°–∏–∑–¥–∏–Ω –∂–æ–æ–ø—Ç–æ—Ä—É“£—É–∑–¥—É –º–µ–Ω –±–∏–ª–¥–∏—Ä–º–µ–≥–µ –∫–∏—Ä–≥–∏–∑–µ–º. ü§ó'
    
    await callback.message.edit_reply_markup(None)
    await callback.bot.send_message(user, text, reply_markup=kb.inl_im_understood)


### –¢–∏—Ä–∫–µ–º–µ–≥–µ –∫–∏—Ä–±–µ–π –∂–∞—Ç–∞—Ç
@router.message(F.text == '–¢–∏—Ä–∫–µ–º–µ–≥–µ –∫–∏—Ä–±–µ–π –∂–∞—Ç–∞—Ç')
async def dnot_cannot_enter(message: Message):
    cm.upsert_report('cannot_ent')
    
    text = '"–£–ª–∞–Ω—Ç—É—É–¥–∞–Ω –º—É—Ä—É–Ω, –º“Ø–º–∫“Ø–Ω –±–æ–ª–≥–æ–Ω —Å–µ–±–µ–ø—Ç–µ—Ä–¥–∏ –∂–∞–Ω–∞ –±–∏–∑–¥–∏–Ω –∫–µ“£–µ—à —ç—Å–∫–µ—Ä—Ç“Ø“Ø–±“Ø–∑–¥“Ø –∫–∞—Ä–∞–ø —á—ã–≥—ã“£—ã–∑. ü§ó‚¨áÔ∏è\n\n–≠–≥–µ—Ä –∞–π–¥—ã–Ω –±–∞—à—Ç–∞–ª—ã—à—ã –±–æ–ª—Å–æ, –±–∞–ª–∞–Ω—Å—Ç–∞ –∂–µ—Ç–∏—à—Ç“Ø“Ø –∫–∞—Ä–∞–∂–∞—Ç –±–∞—Ä —ç–∫–µ–Ω–¥–∏–≥–∏–Ω —Ç–µ–∫—à–µ—Ä–∏“£–∏–∑. 1 —Ç—ã–π—ã–Ω –∂–µ—Ç–∏—à—Å–∏–∑ –±–æ–ª—Å–æ –¥–∞–≥—ã, —Å–∏—Å—Ç–µ–º–∞ –¥–æ–º–æ—Ñ–æ–Ω “Ø—á“Ø–Ω —Ç”©–ª”©–º–¥“Ø —Ç“Ø—à“Ø—Ä–±”©–π—Ç. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç—Ç–∞—à—Ç—ã—Ä—ã–ª–≥–∞–Ω.\n\n–û—à–æ–Ω–¥–æ–π —ç–ª–µ, –ø–∞—Ä–æ–ª—å –º–µ–Ω–µ–Ω –ª–æ–≥–∏–Ω–¥–∏–Ω —Ç—É—É—Ä–∞ –∫–∏—Ä–≥–∏–∑–∏–ª–≥–µ–Ω–¥–∏–≥–∏–Ω —Ç–µ–∫—à–µ—Ä–∏“£–∏–∑."'
    await message.answer(text, reply_markup=kb.inl_im_read)
    

@router.callback_query(F.data == 'im_read_app')
async def im_read_app(callback: CallbackQuery):
    user = callback.from_user.id
    
    text = '–≠–≥–µ—Ä –±—É–ª —ç—Å–∫–µ—Ä—Ç–º–µ —Å–∏–∑ “Ø—á“Ø–Ω –∏—à—Ç–µ–±–µ—Å–µ, –∞–Ω–¥–∞ –∞–¥–∏—Å—Ç–µ—Ä —Å–∏–∑–¥–∏–Ω ”©—Ç“Ø–Ω“Ø—á“Ø“£“Ø–∑–¥“Ø —Ç–µ–∑–∏—Ä—ç—ç–∫ –∏—à—Ç–µ–ø —á—ã–≥—ã–ø, –∫”©–π–≥”©–π–¥“Ø —á–µ—á–∏—à–∏ “Ø—á“Ø–Ω, –±–∏–ª–¥–∏—Ä–º–µ —Ç–æ–ª—Ç—É—Ä–∞–ª—ã. ü§ó\n\n–ë—É–ª –∫”©–ø —É–±–∞–∫—ã—Ç—Ç—ã —Ç–∞–ª–∞–ø –∫—ã–ª–±–∞–π—Ç-–°–∏–∑ –±–∏—Ä –Ω–µ—á–µ —Å—É—Ä–æ–æ–ª–æ—Ä–≥–æ –∂–æ–æ–ø –±–µ—Ä–∏—à–∏“£–∏–∑ –∫–µ—Ä–µ–∫...\n\n–ê—Ä –±–∏—Ä —Å—É—Ä–æ–æ–≥–æ –±–∏—Ä –±–∏–ª–¥–∏—Ä“Ø“Ø –º–µ–Ω–µ–Ω –∂–æ–æ–ø –∂”©–Ω”©—Ç“Ø“£“Ø–∑. –°–∏–∑–¥–∏–Ω –∂–æ–æ–ø—Ç–æ—Ä—É“£—É–∑–¥—É –º–µ–Ω –±–∏–ª–¥–∏—Ä–º–µ–≥–µ –∫–∏—Ä–≥–∏–∑–µ–º. ü§ó'
    
    await callback.message.edit_reply_markup(None)
    await callback.bot.send_message(user, text, reply_markup=kb.inl_im_understood)


### –ö–∞–º–µ—Ä–∞–ª–∞—Ä –∏—à—Ç–µ–±–µ–π –∂–∞—Ç–∞—Ç
@router.message(F.text == '–ö–∞–º–µ—Ä–∞–ª–∞—Ä –∏—à—Ç–µ–±–µ–π –∂–∞—Ç–∞—Ç')
async def dnot_work_cameras(message: Message):
    cm.upsert_report('dwork_camera')
    
    text = '‚ÄºÔ∏è –í–∏–¥–µ–æ–±–∞–π–∫–æ–æ–Ω—É–Ω –∫–∞–º–µ—Ä–∞–ª–∞—Ä—ã ""–î–æ–º–æ—Ñ–æ–Ω 200 ""—Ç–∞—Ä–∏—Ñ–∏ –±–æ—é–Ω—á–∞ –≥–∞–Ω–∞ –∂–µ—Ç–∫–∏–ª–∏–∫—Ç“Ø“Ø. –≠–≥–µ—Ä —Å–∏–∑–¥–µ —É—à—É–Ω–¥–∞–π –ø–ª–∞–Ω –±–æ–ª—Å–æ, –±–∏—Ä–æ–∫ –∫–∞–º–µ—Ä–∞–ª–∞—Ä –∫–æ–ª–¥–æ–Ω–º–æ–¥–æ –∫”©—Ä—Å”©—Ç“Ø–ª–±”©—Å”© –∂–µ –∏—à—Ç–µ–±–µ–π –∂–∞—Ç—Å–∞, –∞–Ω–¥–∞ –º“Ø–º–∫“Ø–Ω –±–æ–ª–≥–æ–Ω —Å–µ–±–µ–ø—Ç–µ—Ä–¥–∏ –∫–∞—Ä–∞–ø –∫”©—Ä”©–ª“Ø.\n\n–ë—É–ª “Ø—á“Ø–Ω –±–∏–∑ –±–∏–ª–¥–∏—Ä–º–µ —Ç–æ–ª—Ç—É—Ä—É—à—É–±—É–∑ –∫–µ—Ä–µ–∫. –ë—É–ª –∫”©–ø —É–±–∞–∫—ã—Ç—Ç—ã —Ç–∞–ª–∞–ø –∫—ã–ª–±–∞–π—Ç- —Å–∏–∑ –±–∏—Ä –Ω–µ—á–µ —Å—É—Ä–æ–æ–ª–æ—Ä–≥–æ –∂–æ–æ–ø –±–µ—Ä–∏—à–∏“£–∏–∑ –∫–µ—Ä–µ–∫. –°—É—Ä–∞–Ω—ã—á, –∞—Ä –±–∏—Ä —Å—É—Ä–æ–æ–≥–æ –±–∏—Ä –±–∏–ª–¥–∏—Ä“Ø“Ø –º–µ–Ω–µ–Ω –∂–æ–æ–ø –∂”©–Ω”©—Ç“Ø“£“Ø–∑. –°–∏–∑–¥–∏–Ω –∂–æ–æ–ø—Ç–æ—Ä—É“£—É–∑–¥—É –º–µ–Ω –±–∏–ª–¥–∏—Ä–º–µ–≥–µ –∫–∏—Ä–≥–∏–∑–µ–º. ü§ó'
    await message.answer(text, reply_markup=kb.inl_im_understood)
    
    
### –¢–µ–ª–µ—Ñ–æ–Ω–≥–æ —á–∞–ª—É—É–ª–∞—Ä —Ç“Ø—à–∫”©–Ω –∂–æ–∫
@router.message(F.text == '–¢–µ–ª–µ—Ñ–æ–Ω–≥–æ —á–∞–ª—É—É–ª–∞—Ä —Ç“Ø—à–∫”©–Ω –∂–æ–∫')
async def dnot_work_app(message: Message):
    cm.upsert_report('dwork_app')
    
    text = '"–£–ª–∞–Ω—Ç—É—É–¥–∞–Ω –º—É—Ä—É–Ω, –º“Ø–º–∫“Ø–Ω –±–æ–ª–≥–æ–Ω —Å–µ–±–µ–ø—Ç–µ—Ä–¥–∏ –∂–∞–Ω–∞ –±–∏–∑–¥–∏–Ω –∫–µ“£–µ—à —ç—Å–∫–µ—Ä—Ç“Ø“Ø–±“Ø–∑–¥“Ø –∫–∞—Ä–∞–ø —á—ã–≥—ã“£—ã–∑. ü§ó‚¨áÔ∏è \n\n–ë–∏–∑–¥–∏–Ω —Ç–∏—Ä–∫–µ–º–µ “Ø—á“Ø–Ω –º–æ–±–∏–ª–¥–∏–∫ —Ç“Ø–∑–º”©–∫—Ç“Ø–Ω —É—Ä—É–∫—Å–∞—Ç—Ç–∞—Ä—ã–Ω —Ç–µ–∫—à–µ—Ä–∏“£–∏–∑. –ë—É–ª “Ø—á“Ø–Ω, —Ç–∏—Ä–∫–µ–º–µ–Ω–∏ –∞—á–∫–∞–Ω–¥–∞–Ω –∫–∏–π–∏–Ω —Ç”©–º”©–Ω–∫“Ø –º–µ–Ω—é–¥–∞–Ω "–ø—Ä–æ—Ñ–∏–ª–¥–∏" —Ç–∞–∞–ø, –∞–Ω–¥–∞–Ω –∫–∏–π–∏–Ω "—É—Ä—É–∫—Å–∞—Ç—Ç–∞—Ä–¥—ã –æ—Ä–Ω–æ—Ç—É—É–Ω—É" —Ç–∞–Ω–¥–∞“£—ã–∑ –∂–∞–Ω–∞ –±–∞—Ä–¥—ã–∫ –∫–µ—Ä–µ–∫—Ç“Ø“Ø —É—Ä—É–∫—Å–∞—Ç—Ç–∞—Ä–¥—ã –∏—à—Ç–µ—Ç–∏“£–∏–∑. \n\n–û—à–æ–Ω–¥–æ–π —ç–ª–µ, VPN –∏—à—Ç–µ—Ç–∏–ª–≥–µ–Ω–¥–µ —Ç–∏—Ä–∫–µ–º–µ –∏—à—Ç–µ–±–µ–π –∫–∞–ª—ã—à—ã –º“Ø–º–∫“Ø–Ω. –ê–ª ”©—á“Ø–∫ —ç–∫–µ–Ω–∏–Ω —Ç–µ–∫—à–µ—Ä–∏“£–∏–∑."'
    await message.answer(text, reply_markup=kb.inl_app_dnot)
    

@router.callback_query(F.data == 'im_app_dnot')
async def im_app_dnot(callback: CallbackQuery):
    user = callback.from_user.id
    
    text = '–≠–≥–µ—Ä –±—É–ª —ç—Å–∫–µ—Ä—Ç–º–µ —Å–∏–∑ “Ø—á“Ø–Ω –∏—à—Ç–µ–±–µ—Å–µ, –∞–Ω–¥–∞ –∞–¥–∏—Å—Ç–µ—Ä —Å–∏–∑–¥–∏–Ω ”©—Ç“Ø–Ω“Ø—á“Ø“£“Ø–∑–¥“Ø —Ç–µ–∑–∏—Ä—ç—ç–∫ –∏—à—Ç–µ–ø —á—ã–≥—ã–ø, –∫”©–π–≥”©–π–¥“Ø —á–µ—á–∏—à–∏ “Ø—á“Ø–Ω, –±–∏–ª–¥–∏—Ä–º–µ —Ç–æ–ª—Ç—É—Ä–∞–ª—ã. ü§ó\n\n–ë—É–ª –∫”©–ø —É–±–∞–∫—ã—Ç—Ç—ã —Ç–∞–ª–∞–ø –∫—ã–ª–±–∞–π—Ç-–°–∏–∑ –±–∏—Ä –Ω–µ—á–µ —Å—É—Ä–æ–æ–ª–æ—Ä–≥–æ –∂–æ–æ–ø –±–µ—Ä–∏—à–∏“£–∏–∑ –∫–µ—Ä–µ–∫...\n\n–ê—Ä –±–∏—Ä —Å—É—Ä–æ–æ–≥–æ –±–∏—Ä –±–∏–ª–¥–∏—Ä“Ø“Ø –º–µ–Ω–µ–Ω –∂–æ–æ–ø –∂”©–Ω”©—Ç“Ø“£“Ø–∑. –°–∏–∑–¥–∏–Ω –∂–æ–æ–ø—Ç–æ—Ä—É“£—É–∑–¥—É –º–µ–Ω –±–∏–ª–¥–∏—Ä–º–µ–≥–µ –∫–∏—Ä–≥–∏–∑–µ–º. ü§ó'
    
    await callback.message.edit_reply_markup(None)
    await callback.bot.send_message(user, text, reply_markup=kb.inl_im_understood)
    

### –ë–∞—à–∫–∞
@router.message(F.text == '–ë–∞—à–∫–∞')
async def another(message: Message):
    cm.upsert_report('another')
    
    text = ' –≠–≥–µ—Ä —Å—É–Ω—É—à—Ç–∞–ª–≥–∞–Ω –±”©–ª“Ø–º–¥”©—Ä–¥“Ø–Ω –±–∏—Ä–∏ –¥–∞ —Å–∏–∑–≥–µ —Ç—É—É—Ä–∞ –∫–µ–ª–±–µ—Å–µ, —Å–∏–∑–≥–µ –∞–¥–∏—Å –≥–∞–Ω–∞ –∂–∞—Ä–¥–∞–º –±–µ—Ä–µ—Ç. –°—É—Ä–∞–º—ã“£—ã–∑ —Ç–µ–∑–∏—Ä—ç—ç–∫ –∏—à—Ç–µ—Ç–∏–ª–∏—à–∏ “Ø—á“Ø–Ω, –±–∏–ª–¥–∏—Ä–º–µ–Ω–∏ —Ç–æ–ª—Ç—É—Ä–∞–ª—ã.\n\n–ú–µ–Ω –±–∏—Ä –Ω–µ—á–µ —Å—É—Ä–æ–æ–ª–æ—Ä–¥—É –±–µ—Ä–µ–º, –∞—Ä –±–∏—Ä —Å—É—Ä–æ–æ–≥–æ –±–∏—Ä –±–∏–ª–¥–∏—Ä“Ø“Ø –º–µ–Ω–µ–Ω –∂–æ–æ–ø –±–µ—Ä–∏—à –∫–µ—Ä–µ–∫. –ë–∞—Ä–¥—ã–∫ –º–∞–∞–ª—ã–º–∞—Ç—Ç–∞—Ä–¥—ã –º–µ–Ω –±–∏–ª–¥–∏—Ä–º–µ–≥–µ –∫–∏—Ä–≥–∏–∑–µ–º. ü§ó\n\n–ë–∞—à—Ç–∞–π–ª—ã–±—ã?'
    await message.answer(text, reply_markup=kb.inl_start)
    
    
@router.callback_query(F.data == 'report_w')
async def handle_report(callback: CallbackQuery):
    user = callback.from_user.id
    cm.reset_state(user)
    cm.upsert_user_state(user, 10)

    await callback.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å.')

    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.bot.send_message(user, '–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?', reply_markup=kb.cancel)


@router.message(lambda message: cm.get_user_state(message.from_user.id) is not None and cm.get_user_state(message.from_user.id)[0] == 10)
async def handle_name(message: Message):
    user = message.from_user.id
    text = message.text

    cm.upsert_ticket(user, 'name', text)
    cm.upsert_user_state(user, 20)

    await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å', reply_markup=kb.cancel)


@router.message(lambda message: cm.get_user_state(message.from_user.id) is not None and cm.get_user_state(message.from_user.id)[0] == 20)
async def handle_address(message: Message):
    user = message.from_user.id
    text = message.text
    cm.upsert_ticket(user, 'address', text)
    cm.upsert_user_state(user, 3)

    await message.answer('–ö–∞–∫ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?', reply_markup=kb.inl_connection_type)


### Contact type
@router.callback_query(F.data == 'whats')
async def whats(callback: CallbackQuery):
    user = callback.from_user.id
    
    cm.upsert_ticket(user, 'callback_type', '–ù–∞–ø–∏—Å–∞—Ç—å –≤ What\'s App')
    cm.upsert_user_state(user, 50)

    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.bot.send_message(user, '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.', reply_markup=kb.cancel)


@router.callback_query(F.data == 'mobile')
async def whats(callback: CallbackQuery):
    user = callback.from_user.id
    
    cm.upsert_ticket(user, 'callback_type', '–ü–æ–∑–≤–æ–Ω–∏—Ç—å')
    cm.upsert_user_state(user, 50)

    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.bot.send_message(user, '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.', reply_markup=kb.cancel)


@router.message(lambda message: cm.get_user_state(message.from_user.id) is not None and cm.get_user_state(message.from_user.id)[0] == 50)
async def handle_phone(message: Message):
    user = message.from_user.id
    text = message.text
    cm.upsert_ticket(user, 'num', text)
    cm.upsert_user_state(user, 60)

    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é.', reply_markup=kb.cancel)


@router.message(lambda message: cm.get_user_state(message.from_user.id) is not None and cm.get_user_state(message.from_user.id)[0] == 60)
async def handle_description(message: Message):
    user = message.from_user.id
    text = message.text
    cm.upsert_ticket(user, 'description', text)
    cm.reset_state(user)

    get_data = cm.get_ticket(user)
    date = message.date.today().strftime("%Y-%m-%d %H:%M")

    await message.bot.send_message(
        -1002009533675,
        f'–û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{message.from_user.username}. \n–í—Ä–µ–º—è: {date}\
        \n\n–í–æ–ø—Ä–æ—Å: –ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç?\n–û—Ç–≤–µ—Ç: {get_data[1]}\
        \n\n–í–æ–ø—Ä–æ—Å: –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å\n–û—Ç–≤–µ—Ç: {get_data[2]}\
        \n\n–í–æ–ø—Ä–æ—Å: –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏\n–û—Ç–≤–µ—Ç: {get_data[3]}\
        \n\n–í–æ–ø—Ä–æ—Å: –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏\n–û—Ç–≤–µ—Ç: {get_data[5]}\
        \n\n–í–æ–ø—Ä–æ—Å: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é.\n–û—Ç–≤–µ—Ç: {get_data[4]}'
    )

    await message.answer('–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –°—Ä–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ ‚Äî 1‚Äì2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è.\n\n–ö—Å—Ç–∞—Ç–∏, —É –Ω–∞—Å –µ—Å—Ç—å –Ω–æ–≤–æ—Å—Ç–Ω–æ–π Telegram-–∫–∞–Ω–∞–ª –∏ Instagram, –≥–¥–µ –º—ã –ø—É–±–ª–∏–∫—É–µ–º —Å–∞–º—ã–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏. –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å ‚Äî —Å –Ω–∞–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! ü©µ', reply_markup=kb.contacts)
    

@router.message(Command('report_about'))
async def report_about(message: Message):
    rep = cm.report_about_report()
    text = f'Start: {rep[0][0]}\n–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —É–º–Ω—ã–π –¥–æ–º–æ—Ñ–æ–Ω?: {rep[0][1]}\n–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ —É–º–µ–µ—Ç —É–º–Ω—ã–π –¥–æ–º–æ—Ñ–æ–Ω: {rep[0][2]}\
             \n–ì–¥–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á?: {rep[0][3]}\n–ö—Ç–æ —Ç–∞–∫–∞—è –°–∏—é?: {rep[0][4]}\n–û –∫–æ–º–ø–∞–Ω–∏–∏: {rep[0][5]}\
             \n–£ –º–µ–Ω—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ: {rep[0][6]}\n–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –≤–æ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {rep[0][7]}\
             \n–ù–µ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–º–µ—Ä—ã: {rep[0][8]}\n–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {rep[0][9]}\n–î—Ä—É–≥–æ–µ: {rep[0][10]}'
    
    await message.answer(text, reply_markup=kb.helper)


@router.message(F.text == '–ë–∞–ª–∞–Ω—Å—Ç—ã —Ç–µ–∫—à–µ—Ä“Ø“Ø')
async def check_balance(message: Message):
    user = message.from_user.id
    text = '–ë–∞–ª–∞–Ω—Å—Ç—ã —Ç–µ–∫—à–µ—Ä“Ø“Ø “Ø—á“Ø–Ω ”©–∑–¥“Ø–∫ —ç—Å–µ–±–∏“£–∏–∑–¥–∏–Ω –Ω–æ–º–µ—Ä–∏–Ω –∫–∏—Ä–≥–∏–∑–∏“£–∏–∑.\n\n”®–∑–¥“Ø–∫ —ç—Å–µ–ø –∫–µ–ª–∏—à–∏–º–¥–µ –∂–∞–∑—ã–ª–∞—Ç.\n*–ö”©“£“Ø–ª –±—É—Ä—É“£—É–∑!* –°–∞–Ω–¥–∞—Ä–¥—ã –≥–∞–Ω–∞ –∫–∏—Ä–≥–∏–∑–∏“£–∏–∑, –º–∏—Å–∞–ª—ã: 05592'
    
    cm.reset_state(user)
    cm.upsert_user_state(user, 100)
        
    await message.answer(text, reply_markup=kb.cancel, parse_mode='Markdown')
    

@router.message(lambda message: cm.get_user_state(message.from_user.id) is not None and cm.get_user_state(message.from_user.id)[0] == 100)
async def check_balance_2(message: Message):
    user = message.from_user.id
    get_text = message.text.lower()
    
    cm.upsert_user_state(user, 200)
    
    mydb = mysql.connector.connect(
        host='185.39.79.69',
        user='domofon',
        password='mys897877b7',
        database='stg'
    )

    cur = mydb.cursor()
    
    TP = {
            'Domofon': 200,
            'Domofon_day': 200,
            'Domofon_100': 100,
            'Domofon_day_4': 100,
            'Domofon_60': 60,
            'Domofon_day_2': 60,
            'Domofon_300': 300,
            'Domofon_day_10': 300,
        }
    
    try:
        cur.execute(f'SELECT u.cash, u.tariff, rn.realname, ph.phone, ph.mobile, pay.summ, pay.date FROM users u LEFT JOIN realname rn ON u.login = rn.login LEFT JOIN phones ph ON ph.login = u.login LEFT JOIN payments pay ON pay.login = u.login WHERE u.login = {get_text} AND pay.admin = "openpayz"')
        
        data = cur.fetchall()[-1]
        
        cm.reset_state(user)
        
        await message.answer(f'–£—á—É—Ä–¥–∞–≥—ã —Ç–∞—Ä–∏—Ñ—Ç–∏–∫ –ø–ª–∞–Ω—ã“£—ã–∑: –∞–π—ã–Ω–∞ {TP.get(data[1], data[1])} —Å–æ–º\n–£—á—É—Ä–¥–∞–≥—ã –±–∞–ª–∞–Ω—Å—ã“£—ã–∑: {data[0]} —Å–æ–º\n–ê–∫—ã—Ä–∫—ã —Ç–æ–ª—É–∫—Ç–æ–æ: {data[5]} —Å–æ–º —Å—É–º–º–∞—Å—ã–Ω–¥–∞ –±–æ–ª–¥—É\n–ê–∫—ã—Ä–∫—ã —Ç–æ–ª—É–∫—Ç–æ–æ: {data[-1]}', reply_markup=kb.helper)
    except IndexError:
        
        await message.answer(f'–ú–µ–Ω —Å–∏–∑–¥–∏–Ω —ç—Å–µ–±–∏“£–∏–∑–¥–∏ —Ç–∞–±–∞ –∞–ª–≥–∞–Ω –∂–æ–∫–º—É–Ω. –ö”©–±“Ø—Ä”©”©–∫ –º–∞–∞–ª—ã–º–∞—Ç –∞–ª—É—É “Ø—á“Ø–Ω, –∫–∞—Ä–¥–∞—Ä–ª–∞—Ä–¥—ã –∫–æ–ª–¥–æ–æ –±”©–ª“Ø–º“Ø–Ω”© –∫–∞–π—Ä—ã–ª—ã“£—ã–∑.\n\n–ë–∏–ª–¥–∏—Ä–º–µ–Ω–∏ –∞–∑—ã—Ä —Ç–æ–ª—Ç—É—Ä–∞–±—ã–∑–±—ã?', reply_markup=kb.inl_im_understood)


@router.callback_query(F.data == 'instagram')
async def insta(callback: CallbackQuery):
    user = callback.from_user.id
        
    await callback.bot.send_message(user, '–ë—É–ª –∂–µ—Ä–¥–µ –±–∏–∑–¥–∏–Ω –∂–∞“£—ã–ª—ã–∫—Ç–∞—Ä –±–∞—Ä–∞–∫—á–∞—Å—ã–Ω–∞ —à–∏–ª—Ç–µ–º–µ.\nhttps://www.instagram.com/intercom.kg/', reply_markup=kb.helper)


@router.callback_query(F.data == 'telegram')
async def telegram(callback: CallbackQuery):
    user = callback.from_user.id
        
    await callback.bot.send_message(user, '–ë—É–ª –∂–µ—Ä–¥–µ –±–∏–∑–¥–∏–Ω –∂–∞“£—ã–ª—ã–∫—Ç–∞—Ä –±–∞—Ä–∞–∫—á–∞—Å—ã–Ω–∞ —à–∏–ª—Ç–µ–º–µ.\nhttps://t.me/intercomkg', reply_markup=kb.helper)